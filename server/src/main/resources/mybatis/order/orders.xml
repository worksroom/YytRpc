<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Orders">
    <resultMap type="Orders" id="OrdersMap">
        <result property="id" column="id"/>
        <result property="buyUserId" column="buy_user_id"/>
        <result property="sellUserId" column="sell_user_id"/>
        <result property="payType" column="pay_type"/>
        <result property="totalMoney" column="total_money"/>
        <result property="productMoney" column="product_money"/>
        <result property="status" column="status"/>
        <result property="fee" column="fee"/>
        <result property="productDesc" column="product_desc"/>
        <result property="ip" column="ip"/>
        <result property="payTime" column="pay_time"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="addressId" column="address_id"/>
        <result property="shopId" column="shop_id"/>
    </resultMap>
    <insert id="insert" parameterType="Orders">
        insert into orders (
        id,buy_user_id, shop_id,sell_user_id, pay_type, total_money, product_money, status, fee, product_desc, ip, pay_time, create_time, update_time, address_id)
        VALUES
        ( #{id}, #{buyUserId},#{shopId}, #{sellUserId}, #{payType}, #{totalMoney}, #{productMoney}, #{status}, #{fee}, #{productDesc}, #{ip}, #{payTime}, #{createTime}, #{updateTime}, #{addressId})

    </insert>

    <update id="updateMoney" parameterType="map">
        update orders set total_money=#{totalMoney} where id=#{id}
    </update>

    <update id="updateStatus" parameterType="map">
        update orders set pay_type=#{payType},status=#{status} where id=#{id}
    </update>

    <update id="updateExpress" parameterType="int">
        update orders set  status=2 where id=#{id}
    </update>


    <select id="select" parameterType="string" resultMap="OrdersMap">
        select id ,  buy_user_id,shop_id, sell_user_id, pay_type, total_money, product_money, status, fee, product_desc, ip, pay_time, create_time, update_time, address_id from orders where id=#{id}
    </select>

    <delete id="delete" parameterType="string">
        delete from orders where id=#{id}
    </delete>



    <!--管理平台使用-->
    <!-- 动态sql -->
    <sql id="sql_count">
        select count(1)
    </sql>

    <sql id="sql_select">
        select id ,  buy_user_id, shop_id,sell_user_id, pay_type, total_money, product_money, status, fee, product_desc, ip, pay_time, create_time, update_time, address_id
    </sql>

    <sql id="sql_where">
        from orders
        <where>

            <if test="buyUserId != null and buyUserId >0">
                AND buy_user_id =#{buyUserId}
            </if>
            <if test="shopId != null and shopId >0">
                AND shop_id =#{shopId}
            </if>

            <if test="status != null and status >= 0">
                AND status = #{status}
            </if>
        </where>
    </sql>

    <sql id="sql_order">
        order by create_time desc
    </sql>
    <select id="findByParams_count" parameterType="java.util.HashMap" resultType="int">
        <include refid="sql_count" />
        <include refid="sql_where" />
    </select>
    <select id="findByParams" parameterType="java.util.HashMap" resultMap="OrdersMap">
        <include refid="sql_select" />
        <include refid="sql_where" />
    </select>
</mapper>