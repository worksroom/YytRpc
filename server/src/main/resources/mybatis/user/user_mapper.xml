<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="User">
    <resultMap type="User" id="UserResultMap">
        <result property="userId" column="user_id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="userName" column="user_name"/>
        <result property="password" column="password"/>
        <result property="nickName" column="nick_name"/>
        <result property="email" column="email"/>
        <result property="phone" column="phone"/>
    </resultMap>

    <insert id="insert" parameterType="User">
        insert into user
        (user_id,create_time,update_time,user_name,password,nick_name,email,phone)
        VALUES
        (#{userId},#{createTime},#{updateTime},#{userName},#{password},#{nickName},#{email},#{phone})
        <selectKey resultType="int" keyProperty="id">
            select LAST_INSERT_ID() AS id
        </selectKey>
    </insert>

    <update id="update" parameterType="User">
        update user set update_time=#{updateTime}, nick_name=#{nickName}, email=#{email}, phone=#{phone}
        where user_id=#{userId}
    </update>

    <!-- 根据用户ID查询 -->
    <select id="findByUserId" parameterType="int" resultMap="UserResultMap">
		select user_id,create_time,update_time,user_name,password,nick_name,email,phone
		from user
		where user_id=#{userId}
	</select>

    <!-- 根据用户名查询 -->
    <select id="findUserByUsername" parameterType="String" resultMap="UserResultMap">
        select user_id,create_time,update_time,user_name,password,nick_name,email,phone
        from user
        where user_name=#{userName}
    </select>

    <select id="findByUserIdList" parameterType="List" resultMap="UserResultMap">
        select user_id,create_time,update_time,user_name,password,nick_name,email,phone
        from user
        where user_id in
        <foreach item="item" index="index" collection="list" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>


    <sql id="sql_show">
        select user_id,create_time,update_time,user_name,password,nick_name,email,phone
    </sql>

    <sql id="sql_where">
        from user
        <trim prefix="where" prefixOverrides="AND|OR">
            <if test=" userId != null and userId != 0 ">
                AND user_id = #{userId}
            </if>
            <if test=" userName != null and userName != '' ">
                AND user_name = #{userName}
            </if>
            <if test=" nickName != null and  nickName != '' ">
                AND nick_name = #{nickName}
            </if>
            <if test=" phone != null and  phone != '' ">
                AND phone = #{phone}
            </if>
        </trim>
    </sql>

    <sql id="sql_count">
        select count(1)
    </sql>

    <sql id="sql_order">
        <if test="cols!=null">
            ORDER BY ${cols}
        </if>
    </sql>

    <select id="queryUserByPage_count" parameterType="map" resultType="int">
        <include refid="sql_count"/>
        <include refid="sql_where"/>
    </select>

    <select id="queryUserByPage" parameterType="map" resultMap="UserResultMap">
        <include refid="sql_show"/>
        <include refid="sql_where"/>
        <include refid="sql_order"/>
    </select>

</mapper>